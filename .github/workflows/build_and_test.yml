name: "Networking Recipe CI Build pipeline"

on:
  push:
    branches:
      - main
      - github-actions
  pull_request:
    branches:
      - main
      - github-actions
      
concurrency:
  # if workflow for PR or push is already running stop it, and start new one
  group: build_and_test-${{ github.ref }}
  cancel-in-progress: true

jobs:
  c-linter:
    name: c-linter
    runs-on: ubuntu-latest
    steps:
      - name: Check out Git repository
        uses: actions/checkout@v3

      - name: Install ClangFormat
        run: sudo apt-get install -y clang-format

      - name: Run linters
        uses: wearerequired/lint-action@v2
        with:
          clang_format: true
  cpp-linter:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: cpp-linter/cpp-linter-action@v2
        id: linter
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          style: file

      - name: Fail fast?!
        if: steps.linter.outputs.checks-failed > 0
        run: echo "Some files failed the linting checks!"
  build_and_test:
    timeout-minutes: 100
    runs-on: ubuntu-latest
    steps:
      - name: 'checkout p4-dpdk repo'
        uses: actions/checkout@v3
        with:
          repository: p4lang/p4-dpdk-target
          submodules: 'recursive'
          path: p4sde

      - name: 'Install dependencies'
        working-directory: ./p4sde/tools/setup
        run: |
              sudo apt update -y
              python install_dep.py
      
      - name: 'checkout Networking Recipe'
        uses: actions/checkout@v3
        with:
          repository: ipdk-io/networking-recipe
          ref: drop3
          submodules: 'recursive'
          path: ipdk.recipe
      - name: 'Build and install infrap4d dependencies'
        run: |
             cd ${GITHUB_WORKSPACE}/ipdk.recipe
             export IPDK_RECIPE=`pwd`
             cd $IPDK_RECIPE/setup
             mkdir -p $IPDK_RECIPE/deps
             cmake -B build -DCMAKE_INSTALL_PREFIX=$IPDK_RECIPE/deps -DUSE_SUDO=ON
             cmake --build build -j 
